#!/usr/bin/env perl6

use MoarVM::Remote;
use JSON::Fast;


sub MAIN(Int $port) {
    my $remote = await MoarVM::Remote.connect($port);
    say "success!";

    while prompt("> ") -> $_ {
        when /:s sus[p[e[nd?]?]?]? (\d+)? / {
            say "trying to suspend thread $0";
            say await $remote.suspend($0 ?? $0.Int.self !! Whatever);
        }
        when /:s res[u[m[e?]?]?]? (\d+)? / {
            say "trying to resume thread $0";
            say await $remote.resume($0 ?? $0.Int.self !! Whatever);
        }
        when /:s dump (\d+) / {
            say (await $remote.dump($0.Int.self)).&to-json(:pretty);
        }
        when / tl / {
            say (await $remote.threads-list).&to-json(:pretty);
        }
        when /:s ctxhandle (\d+) (\d+) / {
            say (await $remote.context-handle($0.Int.self, $1.Int.self)).&to-json(:pretty);
        }
        when /:s caller (\d+) / {
            my $result = await $remote.caller-context-handle($0.Int.self);
            say $result.&to-json(:pretty);
        }
        when /:s outer (\d+) / {
            my $result = $remote.outer-context-handle($0.Int.self);
            say $result.&to-json(:pretty);
        }
        when /:s coderef (\d+) (\d+) / {
            my $result = await $remote.coderef-handle($0.Int.self, $1.Int.self);
            say $result.&to-json(:pretty);
        }
        when /:s lexicals (\d+) / {
            my $result = await $remote.lexicals($0.Int.self);
            say $result.&to-json(:pretty);
        }
        when /:s attributes (\d+) / {
            my $result = await $remote.attributes($0.Int.self);
            say $result.&to-json(:pretty);
        }
        default {
            say "oh no! don't know what to do with $_"
        }
        CATCH {
            default {
                .say;
            }
        }
    }
}
